/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __STATUS_NOTIFIER_HOST_DBUS_H__
#define __STATUS_NOTIFIER_HOST_DBUS_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.kde.StatusNotifierHost */

#define DBUS_TYPE_HOST_V0_GEN (dbus_host_v0_gen_get_type ())
#define DBUS_HOST_V0_GEN(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), DBUS_TYPE_HOST_V0_GEN, DbusHostV0Gen))
#define DBUS_IS_HOST_V0_GEN(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), DBUS_TYPE_HOST_V0_GEN))
#define DBUS_HOST_V0_GEN_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), DBUS_TYPE_HOST_V0_GEN, DbusHostV0GenIface))

struct _DbusHostV0Gen;
typedef struct _DbusHostV0Gen DbusHostV0Gen;
typedef struct _DbusHostV0GenIface DbusHostV0GenIface;

struct _DbusHostV0GenIface
{
  GTypeInterface parent_iface;
};

GType dbus_host_v0_gen_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *dbus_host_v0_gen_interface_info (void);
guint dbus_host_v0_gen_override_properties (GObjectClass *klass, guint property_id_begin);


/* ---- */

#define DBUS_TYPE_HOST_V0_GEN_PROXY (dbus_host_v0_gen_proxy_get_type ())
#define DBUS_HOST_V0_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), DBUS_TYPE_HOST_V0_GEN_PROXY, DbusHostV0GenProxy))
#define DBUS_HOST_V0_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), DBUS_TYPE_HOST_V0_GEN_PROXY, DbusHostV0GenProxyClass))
#define DBUS_HOST_V0_GEN_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), DBUS_TYPE_HOST_V0_GEN_PROXY, DbusHostV0GenProxyClass))
#define DBUS_IS_HOST_V0_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), DBUS_TYPE_HOST_V0_GEN_PROXY))
#define DBUS_IS_HOST_V0_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), DBUS_TYPE_HOST_V0_GEN_PROXY))

typedef struct _DbusHostV0GenProxy DbusHostV0GenProxy;
typedef struct _DbusHostV0GenProxyClass DbusHostV0GenProxyClass;
typedef struct _DbusHostV0GenProxyPrivate DbusHostV0GenProxyPrivate;

struct _DbusHostV0GenProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  DbusHostV0GenProxyPrivate *priv;
};

struct _DbusHostV0GenProxyClass
{
  GDBusProxyClass parent_class;
};

GType dbus_host_v0_gen_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DbusHostV0GenProxy, g_object_unref)
#endif

void dbus_host_v0_gen_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
DbusHostV0Gen *dbus_host_v0_gen_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
DbusHostV0Gen *dbus_host_v0_gen_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void dbus_host_v0_gen_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
DbusHostV0Gen *dbus_host_v0_gen_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
DbusHostV0Gen *dbus_host_v0_gen_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define DBUS_TYPE_HOST_V0_GEN_SKELETON (dbus_host_v0_gen_skeleton_get_type ())
#define DBUS_HOST_V0_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), DBUS_TYPE_HOST_V0_GEN_SKELETON, DbusHostV0GenSkeleton))
#define DBUS_HOST_V0_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), DBUS_TYPE_HOST_V0_GEN_SKELETON, DbusHostV0GenSkeletonClass))
#define DBUS_HOST_V0_GEN_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), DBUS_TYPE_HOST_V0_GEN_SKELETON, DbusHostV0GenSkeletonClass))
#define DBUS_IS_HOST_V0_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), DBUS_TYPE_HOST_V0_GEN_SKELETON))
#define DBUS_IS_HOST_V0_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), DBUS_TYPE_HOST_V0_GEN_SKELETON))

typedef struct _DbusHostV0GenSkeleton DbusHostV0GenSkeleton;
typedef struct _DbusHostV0GenSkeletonClass DbusHostV0GenSkeletonClass;
typedef struct _DbusHostV0GenSkeletonPrivate DbusHostV0GenSkeletonPrivate;

struct _DbusHostV0GenSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  DbusHostV0GenSkeletonPrivate *priv;
};

struct _DbusHostV0GenSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType dbus_host_v0_gen_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DbusHostV0GenSkeleton, g_object_unref)
#endif

DbusHostV0Gen *dbus_host_v0_gen_skeleton_new (void);


G_END_DECLS

#endif /* __STATUS_NOTIFIER_HOST_DBUS_H__ */
