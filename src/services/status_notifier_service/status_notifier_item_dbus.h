/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __STATUS_NOTIFIER_ITEM_DBUS_H__
#define __STATUS_NOTIFIER_ITEM_DBUS_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.kde.StatusNotifierItem */

#define DBUS_TYPE_ITEM_V0_GEN (dbus_item_v0_gen_get_type ())
#define DBUS_ITEM_V0_GEN(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), DBUS_TYPE_ITEM_V0_GEN, DbusItemV0Gen))
#define DBUS_IS_ITEM_V0_GEN(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), DBUS_TYPE_ITEM_V0_GEN))
#define DBUS_ITEM_V0_GEN_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), DBUS_TYPE_ITEM_V0_GEN, DbusItemV0GenIface))

struct _DbusItemV0Gen;
typedef struct _DbusItemV0Gen DbusItemV0Gen;
typedef struct _DbusItemV0GenIface DbusItemV0GenIface;

struct _DbusItemV0GenIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_activate) (
    DbusItemV0Gen *object,
    GDBusMethodInvocation *invocation,
    gint arg_x,
    gint arg_y);

  gboolean (*handle_context_menu) (
    DbusItemV0Gen *object,
    GDBusMethodInvocation *invocation,
    gint arg_x,
    gint arg_y);

  gboolean (*handle_scroll) (
    DbusItemV0Gen *object,
    GDBusMethodInvocation *invocation,
    gint arg_delta,
    const gchar *arg_orientation);

  gboolean (*handle_secondary_activate) (
    DbusItemV0Gen *object,
    GDBusMethodInvocation *invocation,
    gint arg_x,
    gint arg_y);

  const gchar * (*get_attention_icon_name) (DbusItemV0Gen *object);

  GVariant * (*get_attention_icon_pixmap) (DbusItemV0Gen *object);

  const gchar * (*get_attention_movie_name) (DbusItemV0Gen *object);

  const gchar * (*get_category) (DbusItemV0Gen *object);

  const gchar * (*get_icon_name) (DbusItemV0Gen *object);

  GVariant * (*get_icon_pixmap) (DbusItemV0Gen *object);

  const gchar * (*get_icon_theme_path) (DbusItemV0Gen *object);

  const gchar * (*get_id) (DbusItemV0Gen *object);

  gboolean  (*get_item_is_menu) (DbusItemV0Gen *object);

  const gchar * (*get_menu) (DbusItemV0Gen *object);

  const gchar * (*get_overlay_icon_name) (DbusItemV0Gen *object);

  GVariant * (*get_overlay_icon_pixmap) (DbusItemV0Gen *object);

  const gchar * (*get_status) (DbusItemV0Gen *object);

  const gchar * (*get_title) (DbusItemV0Gen *object);

  GVariant * (*get_tool_tip) (DbusItemV0Gen *object);

  gint  (*get_window_id) (DbusItemV0Gen *object);

  const gchar * (*get_xayatana_label) (DbusItemV0Gen *object);

  void (*new_attention_icon) (
    DbusItemV0Gen *object);

  void (*new_icon) (
    DbusItemV0Gen *object);

  void (*new_icon_theme_path) (
    DbusItemV0Gen *object,
    const gchar *arg_icon_theme_path);

  void (*new_overlay_icon) (
    DbusItemV0Gen *object);

  void (*new_status) (
    DbusItemV0Gen *object,
    const gchar *arg_status);

  void (*new_title) (
    DbusItemV0Gen *object);

  void (*new_tool_tip) (
    DbusItemV0Gen *object);

  void (*xayatana_new_label) (
    DbusItemV0Gen *object,
    const gchar *arg_label,
    const gchar *arg_guide);

};

GType dbus_item_v0_gen_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *dbus_item_v0_gen_interface_info (void);
guint dbus_item_v0_gen_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void dbus_item_v0_gen_complete_context_menu (
    DbusItemV0Gen *object,
    GDBusMethodInvocation *invocation);

void dbus_item_v0_gen_complete_activate (
    DbusItemV0Gen *object,
    GDBusMethodInvocation *invocation);

void dbus_item_v0_gen_complete_secondary_activate (
    DbusItemV0Gen *object,
    GDBusMethodInvocation *invocation);

void dbus_item_v0_gen_complete_scroll (
    DbusItemV0Gen *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void dbus_item_v0_gen_emit_new_title (
    DbusItemV0Gen *object);

void dbus_item_v0_gen_emit_new_icon (
    DbusItemV0Gen *object);

void dbus_item_v0_gen_emit_new_attention_icon (
    DbusItemV0Gen *object);

void dbus_item_v0_gen_emit_new_overlay_icon (
    DbusItemV0Gen *object);

void dbus_item_v0_gen_emit_new_tool_tip (
    DbusItemV0Gen *object);

void dbus_item_v0_gen_emit_new_status (
    DbusItemV0Gen *object,
    const gchar *arg_status);

void dbus_item_v0_gen_emit_new_icon_theme_path (
    DbusItemV0Gen *object,
    const gchar *arg_icon_theme_path);

void dbus_item_v0_gen_emit_xayatana_new_label (
    DbusItemV0Gen *object,
    const gchar *arg_label,
    const gchar *arg_guide);



/* D-Bus method calls: */
void dbus_item_v0_gen_call_context_menu (
    DbusItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean dbus_item_v0_gen_call_context_menu_finish (
    DbusItemV0Gen *proxy,
    GAsyncResult *res,
    GError **error);

gboolean dbus_item_v0_gen_call_context_menu_sync (
    DbusItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GError **error);

void dbus_item_v0_gen_call_activate (
    DbusItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean dbus_item_v0_gen_call_activate_finish (
    DbusItemV0Gen *proxy,
    GAsyncResult *res,
    GError **error);

gboolean dbus_item_v0_gen_call_activate_sync (
    DbusItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GError **error);

void dbus_item_v0_gen_call_secondary_activate (
    DbusItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean dbus_item_v0_gen_call_secondary_activate_finish (
    DbusItemV0Gen *proxy,
    GAsyncResult *res,
    GError **error);

gboolean dbus_item_v0_gen_call_secondary_activate_sync (
    DbusItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GError **error);

void dbus_item_v0_gen_call_scroll (
    DbusItemV0Gen *proxy,
    gint arg_delta,
    const gchar *arg_orientation,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean dbus_item_v0_gen_call_scroll_finish (
    DbusItemV0Gen *proxy,
    GAsyncResult *res,
    GError **error);

gboolean dbus_item_v0_gen_call_scroll_sync (
    DbusItemV0Gen *proxy,
    gint arg_delta,
    const gchar *arg_orientation,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *dbus_item_v0_gen_get_category (DbusItemV0Gen *object);
gchar *dbus_item_v0_gen_dup_category (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_category (DbusItemV0Gen *object, const gchar *value);

const gchar *dbus_item_v0_gen_get_id (DbusItemV0Gen *object);
gchar *dbus_item_v0_gen_dup_id (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_id (DbusItemV0Gen *object, const gchar *value);

const gchar *dbus_item_v0_gen_get_title (DbusItemV0Gen *object);
gchar *dbus_item_v0_gen_dup_title (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_title (DbusItemV0Gen *object, const gchar *value);

const gchar *dbus_item_v0_gen_get_status (DbusItemV0Gen *object);
gchar *dbus_item_v0_gen_dup_status (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_status (DbusItemV0Gen *object, const gchar *value);

gint dbus_item_v0_gen_get_window_id (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_window_id (DbusItemV0Gen *object, gint value);

const gchar *dbus_item_v0_gen_get_icon_name (DbusItemV0Gen *object);
gchar *dbus_item_v0_gen_dup_icon_name (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_icon_name (DbusItemV0Gen *object, const gchar *value);

GVariant *dbus_item_v0_gen_get_icon_pixmap (DbusItemV0Gen *object);
GVariant *dbus_item_v0_gen_dup_icon_pixmap (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_icon_pixmap (DbusItemV0Gen *object, GVariant *value);

const gchar *dbus_item_v0_gen_get_overlay_icon_name (DbusItemV0Gen *object);
gchar *dbus_item_v0_gen_dup_overlay_icon_name (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_overlay_icon_name (DbusItemV0Gen *object, const gchar *value);

GVariant *dbus_item_v0_gen_get_overlay_icon_pixmap (DbusItemV0Gen *object);
GVariant *dbus_item_v0_gen_dup_overlay_icon_pixmap (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_overlay_icon_pixmap (DbusItemV0Gen *object, GVariant *value);

const gchar *dbus_item_v0_gen_get_attention_icon_name (DbusItemV0Gen *object);
gchar *dbus_item_v0_gen_dup_attention_icon_name (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_attention_icon_name (DbusItemV0Gen *object, const gchar *value);

GVariant *dbus_item_v0_gen_get_attention_icon_pixmap (DbusItemV0Gen *object);
GVariant *dbus_item_v0_gen_dup_attention_icon_pixmap (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_attention_icon_pixmap (DbusItemV0Gen *object, GVariant *value);

const gchar *dbus_item_v0_gen_get_attention_movie_name (DbusItemV0Gen *object);
gchar *dbus_item_v0_gen_dup_attention_movie_name (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_attention_movie_name (DbusItemV0Gen *object, const gchar *value);

GVariant *dbus_item_v0_gen_get_tool_tip (DbusItemV0Gen *object);
GVariant *dbus_item_v0_gen_dup_tool_tip (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_tool_tip (DbusItemV0Gen *object, GVariant *value);

const gchar *dbus_item_v0_gen_get_icon_theme_path (DbusItemV0Gen *object);
gchar *dbus_item_v0_gen_dup_icon_theme_path (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_icon_theme_path (DbusItemV0Gen *object, const gchar *value);

gboolean dbus_item_v0_gen_get_item_is_menu (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_item_is_menu (DbusItemV0Gen *object, gboolean value);

const gchar *dbus_item_v0_gen_get_menu (DbusItemV0Gen *object);
gchar *dbus_item_v0_gen_dup_menu (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_menu (DbusItemV0Gen *object, const gchar *value);

const gchar *dbus_item_v0_gen_get_xayatana_label (DbusItemV0Gen *object);
gchar *dbus_item_v0_gen_dup_xayatana_label (DbusItemV0Gen *object);
void dbus_item_v0_gen_set_xayatana_label (DbusItemV0Gen *object, const gchar *value);


/* ---- */

#define DBUS_TYPE_ITEM_V0_GEN_PROXY (dbus_item_v0_gen_proxy_get_type ())
#define DBUS_ITEM_V0_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), DBUS_TYPE_ITEM_V0_GEN_PROXY, DbusItemV0GenProxy))
#define DBUS_ITEM_V0_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), DBUS_TYPE_ITEM_V0_GEN_PROXY, DbusItemV0GenProxyClass))
#define DBUS_ITEM_V0_GEN_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), DBUS_TYPE_ITEM_V0_GEN_PROXY, DbusItemV0GenProxyClass))
#define DBUS_IS_ITEM_V0_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), DBUS_TYPE_ITEM_V0_GEN_PROXY))
#define DBUS_IS_ITEM_V0_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), DBUS_TYPE_ITEM_V0_GEN_PROXY))

typedef struct _DbusItemV0GenProxy DbusItemV0GenProxy;
typedef struct _DbusItemV0GenProxyClass DbusItemV0GenProxyClass;
typedef struct _DbusItemV0GenProxyPrivate DbusItemV0GenProxyPrivate;

struct _DbusItemV0GenProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  DbusItemV0GenProxyPrivate *priv;
};

struct _DbusItemV0GenProxyClass
{
  GDBusProxyClass parent_class;
};

GType dbus_item_v0_gen_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DbusItemV0GenProxy, g_object_unref)
#endif

void dbus_item_v0_gen_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
DbusItemV0Gen *dbus_item_v0_gen_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
DbusItemV0Gen *dbus_item_v0_gen_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void dbus_item_v0_gen_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
DbusItemV0Gen *dbus_item_v0_gen_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
DbusItemV0Gen *dbus_item_v0_gen_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define DBUS_TYPE_ITEM_V0_GEN_SKELETON (dbus_item_v0_gen_skeleton_get_type ())
#define DBUS_ITEM_V0_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), DBUS_TYPE_ITEM_V0_GEN_SKELETON, DbusItemV0GenSkeleton))
#define DBUS_ITEM_V0_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), DBUS_TYPE_ITEM_V0_GEN_SKELETON, DbusItemV0GenSkeletonClass))
#define DBUS_ITEM_V0_GEN_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), DBUS_TYPE_ITEM_V0_GEN_SKELETON, DbusItemV0GenSkeletonClass))
#define DBUS_IS_ITEM_V0_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), DBUS_TYPE_ITEM_V0_GEN_SKELETON))
#define DBUS_IS_ITEM_V0_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), DBUS_TYPE_ITEM_V0_GEN_SKELETON))

typedef struct _DbusItemV0GenSkeleton DbusItemV0GenSkeleton;
typedef struct _DbusItemV0GenSkeletonClass DbusItemV0GenSkeletonClass;
typedef struct _DbusItemV0GenSkeletonPrivate DbusItemV0GenSkeletonPrivate;

struct _DbusItemV0GenSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  DbusItemV0GenSkeletonPrivate *priv;
};

struct _DbusItemV0GenSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType dbus_item_v0_gen_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (DbusItemV0GenSkeleton, g_object_unref)
#endif

DbusItemV0Gen *dbus_item_v0_gen_skeleton_new (void);


G_END_DECLS

#endif /* __STATUS_NOTIFIER_ITEM_DBUS_H__ */
